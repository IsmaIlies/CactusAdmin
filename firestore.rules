service cloud.firestore {
  match /databases/{database}/documents {
    // Fonction pour vérifier si l'utilisateur a un rôle d'administration
    function hasAdminRole() {
      return request.auth != null && 
             (request.auth.token.admin == true || 
              request.auth.token.direction == true || 
              request.auth.token.superviseur == true);
    }

    // Règles pour la collection users
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Règles pour la collection sales
    match /sales/{saleId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      // Permettre aux admins/direction/superviseurs de modifier (mais pas supprimer)
      allow update: if request.auth != null && 
                    (request.auth.uid == resource.data.userId || hasAdminRole());
    }

    // Règles explicites pour toutes les collections et sous-collections "sales"
    match /sales/{saleId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update: if request.auth != null && (request.auth.uid == resource.data.userId || hasAdminRole());
    }
    match /missions/{missionId}/sales/{saleId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update: if request.auth != null && (request.auth.uid == resource.data.userId || hasAdminRole());
    }
    
    // Règles pour la collection contactsArgues (CA)
    match /contactsArgues/{docId} {
      // Tous les utilisateurs connectés peuvent lire
      allow read: if request.auth != null;
      // Seuls les utilisateurs avec rôle admin, direction ou superviseur peuvent créer/modifier (mais pas supprimer)
      allow create, update: if hasAdminRole();
    }
    
    // Règles pour la collection missions
    match /missions/{missionId} {
      // Tous les utilisateurs connectés peuvent lire les missions
      allow read: if request.auth != null;
      // Seuls les admins peuvent créer/modifier (mais pas supprimer)
      allow create, update: if hasAdminRole();
    }
    
    // Règles pour la collection missionStats
    match /missionStats/{statId} {
      // Les admins peuvent tout faire
      allow read, write: if hasAdminRole();
    }
    
    // Règles pour la collection objectives
    match /objectives/{objectiveId} {
      // Seuls les utilisateurs avec rôle admin, direction ou superviseur peuvent lire/créer/modifier (mais pas supprimer)
      allow read, create, update: if hasAdminRole();
    }
    
    
    match /missions/{missionId}/contactsArgues/{docId} {
      // Tous les utilisateurs connectés peuvent lire
      allow read: if request.auth != null;
      // Seuls les utilisateurs avec rôle admin, direction ou superviseur peuvent créer/modifier/supprimer
      allow create, update, delete: if hasAdminRole();
    }
    
    match /missions/{missionId}/objectives/{objectiveId} {
      // Seuls les utilisateurs avec rôle admin, direction ou superviseur peuvent lire/créer/modifier/supprimer
      allow read, create, update, delete: if hasAdminRole();
    }
    
    match /users/{userId}/chatHistories/{historyId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /users/{userId}/chatHistories/{historyId}/messages/{messageId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Règles pour la collection teleacteurs (liste des agents)
    match /teleacteurs/{agentId} {
      // Tous les utilisateurs connectés peuvent lire la liste
      allow read: if request.auth != null;
      // Seuls admin/direction/superviseur peuvent créer/modifier/supprimer
      allow create, update, delete: if hasAdminRole();
    }

    // Règles pour l'historique des recaps envoyés
    match /recaps/{recapId} {
      // Lecture pour utilisateurs connectés
      allow read: if request.auth != null;
      // Écriture/maj/suppression pour admin/direction/superviseur
      allow create, update, delete: if hasAdminRole();
    }
    // Règles pour la collection news (Nouveautés)
    match /news/{docId} {
      // Tous les utilisateurs connectés peuvent lire
      allow read: if request.auth != null;
      // Création/mise à jour/suppression réservées aux rôles avancés
      allow create, update, delete: if request.auth != null &&
        (request.auth.token.admin == true ||
         request.auth.token.direction == true ||
         request.auth.token.superviseur == true);
    }
  }
}
